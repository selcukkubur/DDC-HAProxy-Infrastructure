#---------------------------------------------------------------------
# DDC HAProxy EU Zone Configuration - Simplified for Docker Testing
#---------------------------------------------------------------------

global
    log stdout local0
    stats timeout 30s
    
    # Disable chroot and socket for Docker simplicity
    # chroot /var/lib/haproxy
    # stats socket /run/haproxy/admin.sock mode 660 level admin
    # user haproxy
    # group haproxy
    # daemon

    # SSL Configuration (disabled for simplicity)
    # ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+CHACHA20:RSA+AESGCM:RSA+SHA256
    # ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    retries 3
    
    # Simplified error handling (no custom error pages)
    errorfile 400 /dev/null
    errorfile 403 /dev/null
    errorfile 408 /dev/null
    errorfile 500 /dev/null
    errorfile 502 /dev/null
    errorfile 503 /dev/null
    errorfile 504 /dev/null

#---------------------------------------------------------------------
# Statistics Interface
#---------------------------------------------------------------------
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats show-legends
    stats show-desc "DDC HAProxy EU Zone Statistics"
    
    # Health check endpoint
    monitor-uri /health

#---------------------------------------------------------------------
# HTTP Frontend (No HTTPS for simplicity)
#---------------------------------------------------------------------
frontend http_frontend
    bind *:80
    mode http
    
    # Request routing
    acl is_health_check path_beg /health
    acl is_stats_check path_beg /stats
    acl is_api_request path_beg /api
    
    # Backend selection
    use_backend health_backend if is_health_check
    use_backend stats_backend if is_stats_check
    use_backend ddc_nodes_http if is_api_request
    default_backend ddc_nodes_http

#---------------------------------------------------------------------
# Backend Definitions
#---------------------------------------------------------------------

# DDC Nodes - HTTP Backend
backend ddc_nodes_http
    mode http
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Backend servers
    server node1 eu-backend-1:80 check inter 5s rise 2 fall 3 weight 100
    server node2 eu-backend-2:80 check inter 5s rise 2 fall 3 weight 100
    server node3 eu-backend-3:80 check inter 5s rise 2 fall 3 weight 100
    
    # Connection settings
    timeout server 30s
    timeout connect 5s

# Health Check Backend
backend health_backend
    mode http
    
    # Simple health response
    http-request return status 200 content-type "application/json" string '{"status":"healthy","zone":"eu","timestamp":"now","version":"1.0.0"}'

# Internal Stats Backend
backend stats_backend
    mode http
    
    # Redirect to stats interface
    http-request redirect location /stats 
